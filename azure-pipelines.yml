trigger:
- main

resources:
- repo: self

variables:
  - group: GitGroup
  # For Helm Operations
  - name: helmChartPath
    value: '$(Build.SourcesDirectory)/webfrontendchart'
  - name: helmChartTemplatePath
    value: '$(Build.SourcesDirectory)/webfrontendchart/templates'
  - name: configFile
    value: '$(Build.SourcesDirectory)/webfrontendchart/templates/deployment.yaml'
  
  # For Github Operations
  - name: githubOrganization
    value: 'ameliawang0914'
  - name: githubRepository
    value: 'webfrontend'
  - name: targetBranch 
    value: 'fix/kubescore-misconfig'
  - name: commitMessage
    value: 'Fix misconfigurations detected by KubeScore'
  - name: pullRequestTitle
    value: 'Fix KubeScore misconfigurations'
  - name: pullRequestDescription
    value: 'This PR fixes misconfigurations detected by KubeScore'
  - name: sourceBranch
    value: 'main'
  
  # Container registry service connection established during pipeline creation
  - name: dockerRegistryServiceConnection
    value: '939bd1b2-1339-48d9-9412-daedab7d2060'
  - name: imageRepository
    value: 'amywebfrontend'
  - name: containerRegistry
    value: 'amyacr.azurecr.io'
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/Dockerfile'
  - name: tag
    value: '$(Build.BuildId)'

  # Agent VM image name
  - name: vmImageName
    value: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        echo "Scanning Helm charts..."
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        wget -O /usr/local/bin/kube-score https://github.com/zegl/kube-score/releases/download/v1.11.0/kube-score_1.11.0_linux_amd64
        chmod +x /usr/local/bin/kube-score
        helm lint $(helmChartPath)
        helm template $(helmChartPath) | kube-score score - > kube-score-report.txt
        echo "kube-score-report completed"
        cat kube-score-report.txt
        echo "cat kube-score-report completed"
      displayName: 'Lint and scan Helm charts'
      continueOnError: false
    
    - script: |
        python fix_misconfig_kubescore.py kube-score-report.txt $(configFile)
      displayName: 'Fix KubeScore misconfigurations'
      continueOnError: false
    
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          sudo apt-get update
          sudo apt-get install -y gh
      displayName: 'Install GitHub CLI'

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          if ! cmp -s $(configFile) $(configFile).bak; then
            echo $(gittoken)
            git config --global user.email "yuewangapply@gmail.com"
            git config --global user.name "Wang Yue"

            git checkout -b $(targetBranch)
      
            # Assuming fix_kubescore.py made changes to the config file
            git add $(configFile)
            git commit -m "$(commitMessage)"
            git push https://$(gittoken)@github.com/$(githubOrganization)/$(githubRepository).git $(targetBranch)
      
            # Create Pull Request using GitHub CLI
            if ! gh auth status; then
              echo $(gittoken) | gh auth login --with-token
              echo "Authenticated to GitHub CLI with PAT"
            fi
            gh pr create --title "$(pullRequestTitle)" --body "$(pullRequestDescription)" --base $(sourceBranch) --head $(targetBranch)
          else 
            echo "Configuration file has not changed. Skipping PR creation."
      displayName: 'Create Pull Request on GitHub if Configuration File Changed'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
